@use 'sass:math';

@mixin fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: 1400;
  $minViewportWidth: 360;

  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  font-size: clamp(
    #{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem}
  );
}
@mixin BTN {
  border-radius: 30px;
  border: $white solid 1px;
  background: #e0e0e0;

  height: 100%;
  padding: 2rem;
}
@mixin BTNopiacity {
  border-radius: 30px;
  border: $white solid 1px;
  background: #e0e0e086;

  height: 100%;
  padding: 2rem;
}
@mixin BTNmedium {
  border-radius: 30px;
  border: $white solid 1px;
  background: #e0e0e0;
  height: 100%;
  padding: 1rem;
}
@mixin BTNshadow {
  border-radius: 30px;
  background: #e0e0e06a;
  box-shadow:
    5px 5px 18px #a4a4a480,
    -5px -5px 18px #ffffff82;
}
@mixin BRo {
  border-radius: 30px;
  background: #e0e0e094;

  // box-shadow:
  //   48px 48px 300px #d9d9d9e1,
  //   -48px -48px 300px #e7e7e7a5;
}

@mixin no-border-radius($side: all) {
  // Default value 'all'
  @if $side == all {
    border-radius: 0;
  } @else if $side == top {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  } @else if $side == right {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  } @else if $side == bottom {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  } @else if $side == left {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  } @else {
    @error "Invalid side value: #{$side}. Allowed values: all, top, right, bottom, left";
  }
}

@mixin container {
  width: 85%;
  max-width: math.div(85, 100) * 100%; // This ensures the width is calculated as 85% of the parent
  margin-left: auto;
  margin-right: auto;
}

$orange: #f5bc53; // bright
$white: #eeeeee;
$light: #8b8b8b; // light
$medium: #6e6e6e; // medium
$medium-dark: #515151; // dark
$dark: #3e3e3e; // dark
$black: #1f1f1f;
$green: #62eb55;
$half-green: #54ed3968; // Определение миксина для запрета выделения
@mixin no-select {
  user-drag: none;
  -webkit-user-drag: none;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

// В файле mixin.scss
// @mixin respond-to($breakpoint) {
//   @if $breakpoint == mobile {
//     @media (max-width: 425px) {
//       @content;
//     }
//   } @else if $breakpoint == tablet {
//     @media (min-width: 426px) and (max-width: 768px) {
//       @content;
//     }
//   } @else if $breakpoint == desktop {
//     @media (min-width: 769px) and (max-width: 1440px) {
//       @content;
//     }
//   } @else if $breakpoint == large-desktop {
//     @media (min-width: 1441px) {
//       @content;
//     }
//   }
// }

// Определение точек останова как переменных для согласованности и простоты поддержки
$breakpoint-mobile: 425px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1440px;

// Миксин для адаптивного дизайна
// Миксин для адаптивного дизайна
// @mixin respond-to($breakpoint) {
//   @if $breakpoint == mobile {
//     @media (max-width: 425px) {
//       @content;
//     }
//   } @else if $breakpoint == tablet {
//     @media (min-width: 426px) {
//       @content;
//     }
//   } @else if $breakpoint == desktop {
//     @media (min-width: 769) {
//       @content;
//     }
//   } @else if $breakpoint == large-desktop {
//     @media (min-width: 1441px) {
//       @content;
//     }
//   }
// }
